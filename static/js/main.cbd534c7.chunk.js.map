{"version":3,"sources":["Components/Contacts.js","App.js","reportWebVitals.js","index.js"],"names":["Cards","props","useState","age","setAge","Card","Img","variant","src","image","alt","Body","Title","header","Text","name","email","nationality","Button","size","active","id","onClick","App","users","setUsers","useEffect","fetch","then","results","json","data","console","log","className","map","user","picture","medium","first","last","nat","dob","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PA8BeA,EA1BD,SAACC,GAGZ,MAAsBC,oBAAS,GAA/B,mBAAOC,EAAP,KAAYC,EAAZ,KAGK,OACI,8BAEI,eAACC,EAAA,EAAD,WACI,cAACA,EAAA,EAAKC,IAAN,CAAUC,QAAQ,MAAMC,IAAKP,EAAMQ,MAAOC,IAAI,eAC1C,eAACL,EAAA,EAAKM,KAAN,WACI,cAACN,EAAA,EAAKO,MAAN,UAAaX,EAAMY,SACf,eAACR,EAAA,EAAKS,KAAN,WACI,sCAASb,EAAMc,QACf,uCAAUd,EAAMe,SAChB,6CAAgBf,EAAMgB,YAAtB,OACCd,GAAO,sCAASF,EAAME,UAE3B,cAACe,EAAA,EAAD,CAAQX,QAAQ,UAAUY,KAAK,KAAKC,QAAM,EAACC,GAAG,SAASC,QAAS,kBAAMlB,GAAQD,IAA9E,iCC6BjBoB,G,MAzCH,WAGV,MAA0BrB,mBAAS,IAAnC,mBAAOsB,EAAP,KAAcC,EAAd,KAaA,OAXAC,qBAAU,WAENC,MAAM,yCACLC,MAAK,SAAAC,GAAO,OAAIA,EAAQC,UACxBF,MAAK,SAAAG,GACFC,QAAQC,IAAIF,GACZN,EAASM,EAAKF,cAGpB,IAGA,qCACA,qBAAKK,UAAU,SAAf,iCAEGV,EAAMW,KAAI,SAAAC,GAAI,OACb,cAAC,EAAD,CAEE3B,MAAO2B,EAAKC,QAAQC,OACpBvB,KAAQqB,EAAKrB,KAAKwB,MAAQ,GAAKH,EAAKrB,KAAKyB,KACzCxB,MAASoB,EAAKpB,MACdC,YAAamB,EAAKK,IAClBtC,IAAOiC,EAAKM,IAAIvC,cC1BXwC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.cbd534c7.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\n// React-Bootstrap\r\nimport {Card, Button} from 'react-bootstrap';\r\n\r\nconst Cards = (props) => {\r\n    // Using Hook (useState)\r\n   \r\n   const [age, setAge] = useState(true);\r\n\r\n\r\n        return(\r\n            <div>\r\n                {/* User Details */}\r\n                <Card>\r\n                    <Card.Img variant=\"top\" src={props.image} alt=\"user-image\"/>\r\n                        <Card.Body>\r\n                            <Card.Title>{props.header}</Card.Title>\r\n                                <Card.Text>\r\n                                    <p>Name:{props.name}</p>\r\n                                    <p>Email:{props.email}</p>\r\n                                    <p>Nationality:{props.nationality} </p>\r\n                                    {age && <p>Age: {props.age}</p>}\r\n                                </Card.Text>\r\n                                <Button variant=\"primary\" size=\"lg\" active id=\"button\" onClick={() => setAge(!age)}>Toggle Age</Button>\r\n                        </Card.Body>\r\n                </Card>\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default Cards;\r\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Cards from './Components/Contacts';\nimport  { useState, useEffect} from \"react\";\n\n\n\nimport './App.css';\n\n\n\nconst App = () => {\n  \n\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    // Fetch Api \n      fetch('https://randomuser.me/api/?results=10')\n      .then(results => results.json())\n      .then(data =>{\n          console.log(data)\n          setUsers(data.results);\n      });\n\n  },[])\n\n  return (\n    <>    \n    <div className=\"header\">Contact Listing App</div>\n    \n      {users.map(user => (\n        <Cards\n           \n          image={user.picture.medium} \n          name = {user.name.first + \"\" + user.name.last} \n          email = {user.email} \n          nationality={user.nat} \n          age = {user.dob.age} \n        />\n        \n        \n      ))}\n\n    </>\n);\n\n}\n\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}